// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TokenVlidation.Infrastructure.Context;

#nullable disable

namespace TokenVlidation.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250330042909_UpdateTheRelations")]
    partial class UpdateTheRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TokenVlidation.Data.Entities.Bank", b =>
                {
                    b.Property<int>("BankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankID"));

                    b.Property<string>("MerchantID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankID");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("TokenVlidation.Data.Entities.SejourOrder", b =>
                {
                    b.Property<string>("SejourOrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BankID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SejourOrderID");

                    b.HasIndex("BankID");

                    b.ToTable("SejourOrder");
                });

            modelBuilder.Entity("TokenVlidation.Data.Entities.Token", b =>
                {
                    b.Property<int>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EncryptedToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SejourOrderID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TokenID");

                    b.HasIndex("SejourOrderID")
                        .IsUnique();

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("TokenVlidation.Data.Entities.SejourOrder", b =>
                {
                    b.HasOne("TokenVlidation.Data.Entities.Bank", "Bank")
                        .WithMany("SejourOrders")
                        .HasForeignKey("BankID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("TokenVlidation.Data.Entities.Token", b =>
                {
                    b.HasOne("TokenVlidation.Data.Entities.SejourOrder", "SejourOrder")
                        .WithOne("Token")
                        .HasForeignKey("TokenVlidation.Data.Entities.Token", "SejourOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SejourOrder");
                });

            modelBuilder.Entity("TokenVlidation.Data.Entities.Bank", b =>
                {
                    b.Navigation("SejourOrders");
                });

            modelBuilder.Entity("TokenVlidation.Data.Entities.SejourOrder", b =>
                {
                    b.Navigation("Token")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
